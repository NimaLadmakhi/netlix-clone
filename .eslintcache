[{"D:\\netflix-clone\\src\\index.js":"1","D:\\netflix-clone\\src\\startup\\index.jsx":"2","D:\\netflix-clone\\src\\pages\\home\\index.jsx":"3","D:\\netflix-clone\\src\\layouts\\HeaderLayout.jsx":"4","D:\\netflix-clone\\src\\components\\header\\index.jsx":"5","D:\\netflix-clone\\src\\components\\navbar\\index.jsx":"6","D:\\netflix-clone\\src\\recoil\\atoms.js":"7","D:\\netflix-clone\\src\\fetcher\\index.js":"8","D:\\netflix-clone\\src\\components\\banner\\index.jsx":"9","D:\\netflix-clone\\src\\components\\slider\\index.jsx":"10","D:\\netflix-clone\\src\\components\\sections\\index.jsx":"11","D:\\netflix-clone\\src\\components\\cards\\index.jsx":"12","D:\\netflix-clone\\src\\components\\actors\\index.jsx":"13"},{"size":199,"mtime":1612085003025,"results":"14","hashOfConfig":"15"},{"size":615,"mtime":1612094647079,"results":"16","hashOfConfig":"15"},{"size":991,"mtime":1612167827912,"results":"17","hashOfConfig":"15"},{"size":274,"mtime":1612088714554,"results":"18","hashOfConfig":"15"},{"size":1386,"mtime":1612099810107,"results":"19","hashOfConfig":"15"},{"size":1392,"mtime":1612099854680,"results":"20","hashOfConfig":"15"},{"size":2152,"mtime":1612168266639,"results":"21","hashOfConfig":"15"},{"size":1492,"mtime":1612168183786,"results":"22","hashOfConfig":"15"},{"size":1635,"mtime":1612098755652,"results":"23","hashOfConfig":"15"},{"size":2731,"mtime":1612114509876,"results":"24","hashOfConfig":"15"},{"size":1069,"mtime":1612118902264,"results":"25","hashOfConfig":"15"},{"size":1288,"mtime":1612119202048,"results":"26","hashOfConfig":"15"},{"size":1239,"mtime":1612170272092,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"163isis",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\netflix-clone\\src\\index.js",[],["59","60"],"D:\\netflix-clone\\src\\startup\\index.jsx",["61"],"/** @format */\r\n\r\nimport Home from 'pages/home';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { RecoilRoot } from 'recoil';\r\nimport './index.scss';\r\n\r\nexport default () => {\r\n     return (\r\n          <RecoilRoot>\r\n               <React.Suspense fallback={<p>Loading ...</p>}>\r\n                    <Router>\r\n                         <Switch>\r\n                              <Route path='/' component={Home} />\r\n                         </Switch>\r\n                    </Router>\r\n               </React.Suspense>\r\n          </RecoilRoot>\r\n     );\r\n};\r\n","D:\\netflix-clone\\src\\pages\\home\\index.jsx",[],"D:\\netflix-clone\\src\\layouts\\HeaderLayout.jsx",[],"D:\\netflix-clone\\src\\components\\header\\index.jsx",["62"],"/** @format */\r\n\r\nimport MenuWhiteIcon from 'assets/images/menu-white.svg';\r\nimport Navbar from 'components/navbar';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst Header = () => {\r\n     const [toggle, setToggle] = React.useState(false);\r\n     const checkVariant = () => (window.innerWidth > 992 ? 'desktop' : 'mobile');\r\n     const [navbarVariant, setNavbarVariant] = React.useState(checkVariant());\r\n\r\n     window.addEventListener('resize', () => setNavbarVariant(checkVariant()));\r\n\r\n     const handleToggle = () => {\r\n          setToggle((prevToggle) => !prevToggle);\r\n          document.body.style.overflowY = !toggle ? 'hidden' : 'scroll';\r\n     };\r\n     const isBlurText = toggle ? 'header__link--blur' : '';\r\n\r\n     return (\r\n          <header className='header'>\r\n               <nav className='header__nav'>\r\n                    <Link className={`header__link header__link--orange ${isBlurText}`} to='/'>\r\n                         n<span>e</span>t<span>f</span>lix <span>c</span>lone\r\n                    </Link>\r\n                    {navbarVariant === 'mobile' && <img onClick={handleToggle} className='header__logo' src={MenuWhiteIcon} />}\r\n                    <Navbar toggle={handleToggle} variant={navbarVariant} isOpen={toggle} />\r\n               </nav>\r\n          </header>\r\n     );\r\n};\r\n\r\nexport default Header;\r\n","D:\\netflix-clone\\src\\components\\navbar\\index.jsx",[],"D:\\netflix-clone\\src\\recoil\\atoms.js",[],"D:\\netflix-clone\\src\\fetcher\\index.js",[],"D:\\netflix-clone\\src\\components\\banner\\index.jsx",["63","64","65","66"],"/** @format */\r\n\r\nimport { ImageDB_URL, MovieDB_URL, request } from 'fetcher';\r\nimport React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { TRENDING_MOVIES_ATOM } from 'recoil/atoms';\r\nimport './index.scss';\r\n\r\nconst Banner = () => {\r\n     const [currentTrendingIndex, setCurrentTrendingIndex] = React.useState(0);\r\n     const trendingMovie = useRecoilValue(TRENDING_MOVIES_ATOM);\r\n     const [currentKeyMovie, setCurrentKeyMovie] = React.useState();\r\n\r\n     React.useEffect(() => {\r\n          const trendingInterval = setInterval(() => {\r\n               if (currentTrendingIndex <= trendingMovie.length - 5) setCurrentTrendingIndex((prevCurrentIndex) => prevCurrentIndex + 1);\r\n               else setCurrentTrendingIndex(0);\r\n          }, 5000);\r\n          return () => clearInterval(trendingInterval);\r\n     }, [currentTrendingIndex]);\r\n\r\n     const YoutubeHandler = async () => {\r\n          const currentTrendingMovie = trendingMovie[currentTrendingIndex];\r\n          const response = await request(MovieDB_URL(currentTrendingMovie.id));\r\n          setCurrentKeyMovie(response?.results[0]?.key);\r\n     };\r\n\r\n     const currentMovie = trendingMovie[currentTrendingIndex];\r\n\r\n     return (\r\n          <div className='banner'>\r\n               <img className='banner__image' src={ImageDB_URL(currentMovie.backdrop_path)} />\r\n               <div className='banner__content'>\r\n                    <h1 className='banner__title'>{currentMovie.title}</h1>\r\n                    <p className='banner__description'>{currentMovie.overview}</p>\r\n               </div>\r\n          </div>\r\n     );\r\n};\r\n\r\nexport default Banner;\r\n","D:\\netflix-clone\\src\\components\\slider\\index.jsx",[],"D:\\netflix-clone\\src\\components\\sections\\index.jsx",[],"D:\\netflix-clone\\src\\components\\cards\\index.jsx",["67"],"/** @format */\r\n\r\nimport { ImageDB_URL, request } from 'fetcher';\r\nimport React from 'react';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport './index.scss';\r\n\r\nconst Cards = ({ url }) => {\r\n     const [items, setItems] = React.useState();\r\n\r\n     React.useEffect(() => {\r\n          (async () => {\r\n               const response = await request(url);\r\n               setItems(response?.items?.splice(0, 4));\r\n          })();\r\n     }, [url]);\r\n\r\n     return (\r\n          <div className='cards'>\r\n               {items?.map((item) => (\r\n                    <div className='cards__body' key={item.id}>\r\n                         <div className='cards__overlay'></div>\r\n                         <div className='cards__content'>\r\n                              <h1 className='cards__title'>{item.title}</h1>\r\n                              <p className='cards__description'>{item.overview} ...</p>\r\n                              <ReactStars classNames='cards__stars' value={item.vote_average / 2} activeColor='orange' count={5} size={15} />\r\n                         </div>\r\n                         <img src={ImageDB_URL(item.backdrop_path)} className='cards__image'></img>\r\n                    </div>\r\n               ))}\r\n          </div>\r\n     );\r\n};\r\n\r\nexport default Cards;\r\n","D:\\netflix-clone\\src\\components\\actors\\index.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":1,"nodeType":"74","endLine":21,"endColumn":3},{"ruleId":"75","severity":1,"message":"76","line":28,"column":52,"nodeType":"77","endLine":28,"endColumn":127},{"ruleId":"78","severity":1,"message":"79","line":12,"column":13,"nodeType":"80","messageId":"81","endLine":12,"endColumn":28},{"ruleId":"82","severity":1,"message":"83","line":20,"column":9,"nodeType":"84","endLine":20,"endColumn":31,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"86","line":22,"column":12,"nodeType":"80","messageId":"81","endLine":22,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":32,"column":16,"nodeType":"77","endLine":32,"endColumn":95},{"ruleId":"75","severity":1,"message":"76","line":28,"column":26,"nodeType":"77","endLine":28,"endColumn":94},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'currentKeyMovie' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'trendingMovie.length'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'YoutubeHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [currentTrendingIndex, trendingMovie.length]",{"range":"92","text":"93"},[833,855],"[currentTrendingIndex, trendingMovie.length]"]