[{"D:\\netflix-clone\\src\\index.js":"1","D:\\netflix-clone\\src\\startup\\index.jsx":"2","D:\\netflix-clone\\src\\pages\\home\\index.jsx":"3","D:\\netflix-clone\\src\\layouts\\HeaderLayout.jsx":"4","D:\\netflix-clone\\src\\components\\header\\index.jsx":"5","D:\\netflix-clone\\src\\components\\navbar\\index.jsx":"6","D:\\netflix-clone\\src\\recoil\\atoms.js":"7","D:\\netflix-clone\\src\\fetcher\\index.js":"8","D:\\netflix-clone\\src\\components\\banner\\index.jsx":"9","D:\\netflix-clone\\src\\components\\slider\\index.jsx":"10","D:\\netflix-clone\\src\\components\\sections\\index.jsx":"11","D:\\netflix-clone\\src\\components\\cards\\index.jsx":"12","D:\\netflix-clone\\src\\components\\actors\\index.jsx":"13","D:\\netflix-clone\\src\\help\\backdropPathFilter.js":"14","D:\\netflix-clone\\src\\pages\\archive-genre\\index.jsx":"15","D:\\netflix-clone\\src\\pages\\single-genre\\index.jsx":"16","D:\\netflix-clone\\src\\components\\card-body\\index.jsx":"17"},{"size":199,"mtime":1612085003025,"results":"18","hashOfConfig":"19"},{"size":2050,"mtime":1612186780099,"results":"20","hashOfConfig":"19"},{"size":1768,"mtime":1612185765039,"results":"21","hashOfConfig":"19"},{"size":274,"mtime":1612088714554,"results":"22","hashOfConfig":"19"},{"size":1716,"mtime":1612183185207,"results":"23","hashOfConfig":"19"},{"size":1647,"mtime":1612184572277,"results":"24","hashOfConfig":"19"},{"size":2616,"mtime":1612192893074,"results":"25","hashOfConfig":"19"},{"size":1510,"mtime":1612183209251,"results":"26","hashOfConfig":"19"},{"size":2343,"mtime":1612183174190,"results":"27","hashOfConfig":"19"},{"size":3037,"mtime":1612183536905,"results":"28","hashOfConfig":"19"},{"size":1404,"mtime":1612193220172,"results":"29","hashOfConfig":"19"},{"size":1515,"mtime":1612193222162,"results":"30","hashOfConfig":"19"},{"size":1712,"mtime":1612183188705,"results":"31","hashOfConfig":"19"},{"size":156,"mtime":1612183215437,"results":"32","hashOfConfig":"19"},{"size":2141,"mtime":1612186758654,"results":"33","hashOfConfig":"19"},{"size":948,"mtime":1612193225208,"results":"34","hashOfConfig":"19"},{"size":983,"mtime":1612190348202,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"163isis",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"D:\\netflix-clone\\src\\index.js",[],["74","75"],"D:\\netflix-clone\\src\\startup\\index.jsx",["76"],"D:\\netflix-clone\\src\\pages\\home\\index.jsx",[],"D:\\netflix-clone\\src\\layouts\\HeaderLayout.jsx",[],"D:\\netflix-clone\\src\\components\\header\\index.jsx",["77"],"/** @format */\r\n\r\nimport MenuWhiteIcon from 'assets/images/menu-white.svg';\r\nimport Navbar from 'components/navbar';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst Header = () => {\r\n     const [toggle, setToggle] = React.useState(false);\r\n     const checkVariant = () =>\r\n          window.innerWidth > 992 ? 'desktop' : 'mobile';\r\n     const [navbarVariant, setNavbarVariant] = React.useState(checkVariant());\r\n\r\n     window.addEventListener('resize', () => setNavbarVariant(checkVariant()));\r\n\r\n     const handleToggle = () => {\r\n          setToggle((prevToggle) => !prevToggle);\r\n          document.body.style.overflowY = !toggle ? 'hidden' : 'scroll';\r\n     };\r\n     const isBlurText = toggle ? 'header__link--blur' : '';\r\n\r\n     return (\r\n          <header className='header'>\r\n               <nav className='header__nav'>\r\n                    <Link\r\n                         className={`header__link header__link--orange ${isBlurText}`}\r\n                         to='/'>\r\n                         n<span>e</span>t<span>f</span>lix <span>c</span>lone\r\n                    </Link>\r\n                    {navbarVariant === 'mobile' && (\r\n                         <img\r\n                              onClick={handleToggle}\r\n                              className='header__logo'\r\n                              src={MenuWhiteIcon}\r\n                         />\r\n                    )}\r\n                    <Navbar\r\n                         toggle={handleToggle}\r\n                         variant={navbarVariant}\r\n                         isOpen={toggle}\r\n                    />\r\n               </nav>\r\n          </header>\r\n     );\r\n};\r\n\r\nexport default Header;\r\n","D:\\netflix-clone\\src\\components\\navbar\\index.jsx",[],"D:\\netflix-clone\\src\\recoil\\atoms.js",[],"D:\\netflix-clone\\src\\fetcher\\index.js",[],"D:\\netflix-clone\\src\\components\\banner\\index.jsx",["78","79"],"/** @format */\r\n\r\nimport { ImageDB_URL, MovieDB_URL, request } from 'fetcher';\r\nimport React from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { TRENDING_MOVIES_ATOM } from 'recoil/atoms';\r\nimport './index.scss';\r\n\r\nconst Banner = () => {\r\n     const [currentTrendingIndex, setCurrentTrendingIndex] = React.useState(0);\r\n     const trendingMovie = useRecoilValue(TRENDING_MOVIES_ATOM);\r\n     const [currentKeyMovie, setCurrentKeyMovie] = React.useState();\r\n\r\n     React.useEffect(() => {\r\n          const trendingInterval = setInterval(() => {\r\n               if (currentTrendingIndex <= trendingMovie.length - 5)\r\n                    setCurrentTrendingIndex(\r\n                         (prevCurrentIndex) => prevCurrentIndex + 1,\r\n                    );\r\n               else setCurrentTrendingIndex(0);\r\n          }, 5000);\r\n          return () => clearInterval(trendingInterval);\r\n     }, [currentTrendingIndex]);\r\n\r\n     const youtubeHandler = async () => {\r\n          const currentTrendingMovie = trendingMovie[currentTrendingIndex];\r\n          const response = await request(MovieDB_URL(currentTrendingMovie.id));\r\n          setCurrentKeyMovie(response?.results[0]?.key);\r\n     };\r\n\r\n     const resetYoutubeKey = () => setCurrentKeyMovie();\r\n     const currentMovie = trendingMovie[currentTrendingIndex];\r\n     if (currentKeyMovie)\r\n          return (\r\n               <YouTube\r\n                    opts={{\r\n                         playerVars: {\r\n                              autoplay: 1,\r\n                         },\r\n                    }}\r\n                    videoId={currentKeyMovie}\r\n                    className='youtube__video'\r\n                    onEnd={resetYoutubeKey}\r\n               />\r\n          );\r\n     return (\r\n          <div className='banner' onClick={youtubeHandler}>\r\n               <img\r\n                    className='banner__image'\r\n                    src={ImageDB_URL(currentMovie.backdrop_path)}\r\n               />\r\n               <div className='banner__content'>\r\n                    <h1 className='banner__title'>{currentMovie.title}</h1>\r\n                    <p className='banner__description'>\r\n                         {currentMovie.overview}\r\n                    </p>\r\n               </div>\r\n          </div>\r\n     );\r\n};\r\n\r\nexport default Banner;\r\n","D:\\netflix-clone\\src\\components\\slider\\index.jsx",[],"D:\\netflix-clone\\src\\components\\sections\\index.jsx",[],"D:\\netflix-clone\\src\\components\\cards\\index.jsx",["80"],"D:\\netflix-clone\\src\\components\\actors\\index.jsx",[],"D:\\netflix-clone\\src\\help\\backdropPathFilter.js",[],"D:\\netflix-clone\\src\\pages\\archive-genre\\index.jsx",["81"],"D:\\netflix-clone\\src\\pages\\single-genre\\index.jsx",[],"D:\\netflix-clone\\src\\components\\card-body\\index.jsx",["82"],"import { ImageDB_URL } from 'fetcher';\r\nimport React from 'react';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport './index.scss';\r\n\r\nconst CardBody = ({ item }) => {\r\n     return (\r\n          <div className='cards-body__body'>\r\n               <div className='cards-body__overlay'></div>\r\n               <div className='cards-body__content'>\r\n                    <h1 className='cards-body__title'>{item.title}</h1>\r\n                    <p className='cards-body__description'>{item.overview} ...</p>\r\n                    <ReactStars\r\n                         classNames='cards-body__stars'\r\n                         value={item.vote_average / 2}\r\n                         activeColor='orange'\r\n                         count={5}\r\n                         size={15}\r\n                    />\r\n               </div>\r\n               <img src={ImageDB_URL(item.backdrop_path)} className='cards-body__image'></img>\r\n          </div>\r\n     );\r\n};\r\n\r\nexport default CardBody;\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":12,"column":1,"nodeType":"89","endLine":47,"endColumn":3},{"ruleId":"90","severity":1,"message":"91","line":32,"column":26,"nodeType":"92","endLine":36,"endColumn":28},{"ruleId":"93","severity":1,"message":"94","line":24,"column":9,"nodeType":"95","endLine":24,"endColumn":31,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"91","line":49,"column":16,"nodeType":"92","endLine":52,"endColumn":18},{"ruleId":"93","severity":1,"message":"97","line":30,"column":9,"nodeType":"95","endLine":30,"endColumn":14,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"99","line":31,"column":9,"nodeType":"95","endLine":31,"endColumn":16,"suggestions":"100"},{"ruleId":"90","severity":1,"message":"91","line":21,"column":16,"nodeType":"92","endLine":21,"endColumn":89},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'trendingMovie.length'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook React.useEffect has missing dependencies: 'FilterNumber', 'GenreMovieArchiveState', 'activeGenre.id', 'activeGenre.name', and 'setGenreMovieArchiveState'. Either include them or remove the dependency array. If 'setItems' needs the current value of 'activeGenre.name', you can also switch to useReducer instead of useState and read 'activeGenre.name' in the reducer.",["104"],"React Hook React.useEffect has missing dependencies: 'movieData', 'movieDataGanres', and 'setMovieData'. Either include them or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [currentTrendingIndex, trendingMovie.length]",{"range":"112","text":"113"},"Update the dependencies array to be: [FilterNumber, GenreMovieArchiveState, activeGenre.id, activeGenre.name, setGenreMovieArchiveState, url]",{"range":"114","text":"115"},"Update the dependencies array to be: [movieData, movieDataGanres, setMovieData, title]",{"range":"116","text":"117"},[942,964],"[currentTrendingIndex, trendingMovie.length]",[1278,1283],"[FilterNumber, GenreMovieArchiveState, activeGenre.id, activeGenre.name, setGenreMovieArchiveState, url]",[1226,1233],"[movieData, movieDataGanres, setMovieData, title]"]