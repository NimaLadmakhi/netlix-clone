[{"D:\\netflix-clone\\src\\index.js":"1","D:\\netflix-clone\\src\\startup\\index.jsx":"2","D:\\netflix-clone\\src\\pages\\home\\index.jsx":"3","D:\\netflix-clone\\src\\layouts\\HeaderLayout.jsx":"4","D:\\netflix-clone\\src\\components\\header\\index.jsx":"5","D:\\netflix-clone\\src\\components\\navbar\\index.jsx":"6","D:\\netflix-clone\\src\\recoil\\atoms.js":"7","D:\\netflix-clone\\src\\fetcher\\index.js":"8","D:\\netflix-clone\\src\\components\\banner\\index.jsx":"9","D:\\netflix-clone\\src\\components\\slider\\index.jsx":"10","D:\\netflix-clone\\src\\components\\sections\\index.jsx":"11","D:\\netflix-clone\\src\\components\\cards\\index.jsx":"12"},{"size":199,"mtime":1612085003025,"results":"13","hashOfConfig":"14"},{"size":615,"mtime":1612094647079,"results":"15","hashOfConfig":"14"},{"size":923,"mtime":1612118615143,"results":"16","hashOfConfig":"14"},{"size":274,"mtime":1612088714554,"results":"17","hashOfConfig":"14"},{"size":1386,"mtime":1612099810107,"results":"18","hashOfConfig":"14"},{"size":1392,"mtime":1612099854680,"results":"19","hashOfConfig":"14"},{"size":1822,"mtime":1612118458403,"results":"20","hashOfConfig":"14"},{"size":1290,"mtime":1612113358337,"results":"21","hashOfConfig":"14"},{"size":1635,"mtime":1612098755652,"results":"22","hashOfConfig":"14"},{"size":2731,"mtime":1612114509876,"results":"23","hashOfConfig":"14"},{"size":1069,"mtime":1612118624155,"results":"24","hashOfConfig":"14"},{"size":1089,"mtime":1612118531510,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"163isis",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\netflix-clone\\src\\index.js",[],["53","54"],"D:\\netflix-clone\\src\\startup\\index.jsx",["55"],"D:\\netflix-clone\\src\\pages\\home\\index.jsx",[],"D:\\netflix-clone\\src\\layouts\\HeaderLayout.jsx",[],"D:\\netflix-clone\\src\\components\\header\\index.jsx",["56"],"/** @format */\r\n\r\nimport MenuWhiteIcon from 'assets/images/menu-white.svg';\r\nimport Navbar from 'components/navbar';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst Header = () => {\r\n     const [toggle, setToggle] = React.useState(false);\r\n     const checkVariant = () => (window.innerWidth > 992 ? 'desktop' : 'mobile');\r\n     const [navbarVariant, setNavbarVariant] = React.useState(checkVariant());\r\n\r\n     window.addEventListener('resize', () => setNavbarVariant(checkVariant()));\r\n\r\n     const handleToggle = () => {\r\n          setToggle((prevToggle) => !prevToggle);\r\n          document.body.style.overflowY = !toggle ? 'hidden' : 'scroll';\r\n     };\r\n     const isBlurText = toggle ? 'header__link--blur' : '';\r\n\r\n     return (\r\n          <header className='header'>\r\n               <nav className='header__nav'>\r\n                    <Link className={`header__link header__link--orange ${isBlurText}`} to='/'>\r\n                         n<span>e</span>t<span>f</span>lix <span>c</span>lone\r\n                    </Link>\r\n                    {navbarVariant === 'mobile' && <img onClick={handleToggle} className='header__logo' src={MenuWhiteIcon} />}\r\n                    <Navbar toggle={handleToggle} variant={navbarVariant} isOpen={toggle} />\r\n               </nav>\r\n          </header>\r\n     );\r\n};\r\n\r\nexport default Header;\r\n","D:\\netflix-clone\\src\\components\\navbar\\index.jsx",[],"D:\\netflix-clone\\src\\recoil\\atoms.js",[],"D:\\netflix-clone\\src\\fetcher\\index.js",[],"D:\\netflix-clone\\src\\components\\banner\\index.jsx",["57","58","59","60"],"/** @format */\r\n\r\nimport { ImageDB_URL, MovieDB_URL, request } from 'fetcher';\r\nimport React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { TRENDING_MOVIES_ATOM } from 'recoil/atoms';\r\nimport './index.scss';\r\n\r\nconst Banner = () => {\r\n     const [currentTrendingIndex, setCurrentTrendingIndex] = React.useState(0);\r\n     const trendingMovie = useRecoilValue(TRENDING_MOVIES_ATOM);\r\n     const [currentKeyMovie, setCurrentKeyMovie] = React.useState();\r\n\r\n     React.useEffect(() => {\r\n          const trendingInterval = setInterval(() => {\r\n               if (currentTrendingIndex <= trendingMovie.length - 5) setCurrentTrendingIndex((prevCurrentIndex) => prevCurrentIndex + 1);\r\n               else setCurrentTrendingIndex(0);\r\n          }, 5000);\r\n          return () => clearInterval(trendingInterval);\r\n     }, [currentTrendingIndex]);\r\n\r\n     const YoutubeHandler = async () => {\r\n          const currentTrendingMovie = trendingMovie[currentTrendingIndex];\r\n          const response = await request(MovieDB_URL(currentTrendingMovie.id));\r\n          setCurrentKeyMovie(response?.results[0]?.key);\r\n     };\r\n\r\n     const currentMovie = trendingMovie[currentTrendingIndex];\r\n\r\n     return (\r\n          <div className='banner'>\r\n               <img className='banner__image' src={ImageDB_URL(currentMovie.backdrop_path)} />\r\n               <div className='banner__content'>\r\n                    <h1 className='banner__title'>{currentMovie.title}</h1>\r\n                    <p className='banner__description'>{currentMovie.overview}</p>\r\n               </div>\r\n          </div>\r\n     );\r\n};\r\n\r\nexport default Banner;\r\n","D:\\netflix-clone\\src\\components\\slider\\index.jsx",[],"D:\\netflix-clone\\src\\components\\sections\\index.jsx",[],"D:\\netflix-clone\\src\\components\\cards\\index.jsx",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":9,"column":1,"nodeType":"68","endLine":21,"endColumn":3},{"ruleId":"69","severity":1,"message":"70","line":28,"column":52,"nodeType":"71","endLine":28,"endColumn":127},{"ruleId":"72","severity":1,"message":"73","line":12,"column":13,"nodeType":"74","messageId":"75","endLine":12,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":20,"column":9,"nodeType":"78","endLine":20,"endColumn":31,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"80","line":22,"column":12,"nodeType":"74","messageId":"75","endLine":22,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":32,"column":16,"nodeType":"71","endLine":32,"endColumn":95},{"ruleId":"69","severity":1,"message":"70","line":26,"column":26,"nodeType":"71","endLine":26,"endColumn":94},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'currentKeyMovie' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'trendingMovie.length'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'YoutubeHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [currentTrendingIndex, trendingMovie.length]",{"range":"86","text":"87"},[833,855],"[currentTrendingIndex, trendingMovie.length]"]